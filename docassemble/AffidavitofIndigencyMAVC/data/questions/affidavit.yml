---
include:
  - docassemble.gbls:basic-questions-gbls.yml
---
modules:
  - docassemble.income.income
  - docassemble.MACourts.macourts  
---
objects:
  - hh_income: Income
  - fees: DADict.using(gathered=True, auto_gather=False, object_type=DAObject)
  - court: MACourt
  - macourts: MACourtList.using(courts=['housing_courts','bmc','district_courts','superior_courts', 'land_court','juvenile_courts','probate_and_family_courts'])
---
comment: |
  MA Court Poverty Level
code: |
  poverty_level_update = "2020"
  poverty_base = 12760
  poverty_increment = 4480
  poverty_multiplier = 1.25 # threshold multiplier. e.g. 2 for 200%
---
reconsider: True
code: |
  household_income_limit = (poverty_base + ((household_size) + 1 * poverty_increment)) * poverty_multiplier

  household_income_qualifies = int((household_income_limit)/12) >=  int(household_monthly_income)
---
code: |
  household_size = household_additional_size + 1 if has_household_members else 1
---
code: |
  household_monthly_income = hh_income.amount(period_to_use=12)
---
id: question order
mandatory: True
code: |
  multi_user = True # Allow sharing interview
  intro
  public_assistance_kinds
  if not public_assistance_kinds.any_true():
    has_household_members
    if not household_income_qualifies:
      if can_afford:
        doesnt_qualify
  qualify_interstitial
  fees['E-filing'].waive
  fees['Costs of an expert witness'].waive
  fees_interstitial
  client.address.address
  tried_geolocating
  local_housing_court
  set_empty_fees
  final_review
  if send_email_copy:
    sent_email
  ending
---
code: |
  for fee in fees:
    if not fees[fee].waive:
      fees[fee] = DAEmpty()
  set_empty_fees = True
---
code: |
  if public_assistance_kinds.any_true():
    hh_income = DAEmpty()
    household_additional_size = DAEmpty()
    household_size = DAEmpty()
  set_empty_income = True
---
question: |
  Get help with court costs and fees
subquestion: |
  This short interview will help you fill out an "Affidavit
  of Indigency." This form tells the court that you cannot
  pay court fees.
  
  In some cases the waiver is automatic. In other cases
  we may need to ask you for detailed information about your
  income and expenses.
  
  If you were sent this form by an attorney or advocate,
  you can email the signed form to them at the end of the interview.
  They may be able to help you file it with the court.
  
  This interview **does not file your form for you**. You can download and
  [e-file it](http://www.efilema.com/) or you may have an attorney working with
  you who plans to do the e-filing on your behalf.
continue button field: intro
---
question: |
  Do you get any of these benefits?
subquestion: |  
  Check any that apply
fields:
  - no label: public_assistance_kinds
    datatype: checkboxes
    choices:
      - Transitional Aid to Families with Dependent Children (TAFDC): TAFDC
      - Medicaid (MassHealth): Medicaid
      - Emergency Aid to Elderly, Disabled or Children (EAEDC): EAEDC
      - Massachusetts Veterans Benefits Programs: VA Benefits
      - Supplemental Security Income (SSI): SSI
---
question: |
  About your income and household
fields:
  - Does anyone else live with you as part of your household?: has_household_members
    datatype: yesnoradio
    help: |
      For example, count your children, spouse, or other family member you take care
      of or who helps take care of you.
  - How many people, other than yourself? : household_additional_size
    datatype: integer
    show if: has_household_members
  - What is the total (gross) income for your household?: hh_income.value
    datatype: currency
    help: |
      Put in the amount you earn before taxes and deductions.
  - How often do you earn that amount?: hh_income.period
    code: period_list()
    datatype: integer
---
question: |
  Can you afford to pay the court costs?
subquestion: |
  Answer yes if you can afford the costs. Answer no if you either can't afford the costs, or can't
  afford to do so without depriving yourself
  or your dependents of the necessities of life, including food, shelter and clothing
yesno: can_afford
---
event: doesnt_qualify
question: |
  Sorry, it looks like you don't qualify
subquestion: |
  To qualify for a waiver of court costs, you must meet one of these:
  
  1. You receive public assistance
  1. Your income is below 125% of the Federal Poverty Level. For your household
     of ${household_size}, the limit is ${currency(household_income_limit/12)} per month. However, you told us your income is ${currency(hh_income.amount(period_to_use=12))} per month.
  1. You must be unable to afford to pay the costs, or unable to do so without depriving you or your dependents the necessities of life, including food, shelter, and clothing. You said you are able to pay the costs.
---
question: |
  What fees do you want to have waived?
subquestion: |
  This question is about fees paid to the court. On the next 
  screen you'll have a chance to ask the court to pay for special costs,
  such as transcripts, tapes, expert witnesses, etc. that may be paid to a company
  or individual.
  
  If you're not sure yet, you can file another affidavit later.  
fields:
  - Electronic filing fee (about $6/document): fees['E-filing'].waive
    datatype: yesno
    default: True
    help: |
      We've checked this by default because it applies in every case.
  - Other filing fee: fees['Filing fee'].waive
    datatype: yesno
  - Amount (if known): fees['Filing fee'].amount
    datatype: currency
    required: False
    show if: fees['Filing fee'].waive
  - Fee for filing appeal: fees['Appeal cost'].waive
    datatype: yesno
  - Amount (if known): fees['Appeal cost'].amount
    datatype: currency
    required: False
    show if: fees['Appeal cost'].waive
  - Appeal bond: fees['Appeal bond'].waive
    datatype: yesno
  - Amount (if known): fees['Appeal bond'].amount
    datatype: currency
    required: False
    show if: fees['Appeal bond'].waive    
  - Costs of serving the other party: fees['Service'].waive
    datatype: yesno
  - Amount (if known): fees['Service'].amount
    datatype: currency
    required: False
    show if: fees['Service'].waive
  - Other fees or costs: fees['Other'].waive    
    datatype: yesno
  - Amount (if known):  fees['Other'].amount
    datatype: currency
    required: False
    show if:  fees['Other'].waive    
  - Describe the other fee/cost:  fees['Other'].description
    datatype: area
    show if:  fees['Other'].waive    
---
code: |
  fees['E-filing'].amount = 6.70
---
question: |
  Are you asking the court to pay any other costs to help with your case?
subquestion: |
  Check the box for any other costs that you want the court to pay below.
  
  If you're not sure yet, you can file another affidavit later.
fields:
  - Expert witness services, including examinations and testimony: fees['Costs of an expert witness'].waive
    datatype: yesno
  - Amount (if known):  fees['Costs of an expert witness'].amount
    datatype: currency
    required: False
    show if:  fees['Costs of an expert witness'].waive    
  - Describe the need for expert testimony/exams:  fees['Costs of an expert witness'].description
    datatype: area
    show if:  fees['Costs of an expert witness'].waive    
  - Deposition-related costs: fees['Depositions'].waive
    datatype: yesno
  - Amount (if known):  fees['Depositions'].amount
    datatype: currency
    required: False
    show if:  fees['Depositions'].waive    
  - Describe the need for depositions:  fees['Depositions'].description
    datatype: area
    show if:  fees['Depositions'].waive    
  - CD or cassette recordings of trial or hearing: fees['recordings'].waive
    datatype: yesno
  - Written transcript of trial or hearing: fees['transcript'].waive
    datatype: yesno
  - Amount (if known): fees['transcript'].amount    
    datatype: currency
    show if: fees['transcript'].waive
  - Other special fees or costs: fees['Other cost'].waive    
    datatype: yesno
  - Amount (if known):  fees['Other cost'].amount
    datatype: currency
    required: False
    show if:  fees['Other cost'].waive    
  - Describe the other fee/cost:  fees['Other cost'].description
    datatype: area
    show if:  fees['Other cost'].waive    
    
---
question: |
  Summary of fees
subquestion: |
  We'll ask the court to waive the following
  fees:
  
  Fee | Amount (if known) | Edit
  ----|-------|-------
  % for fee in fees:
  % if fees[fee].waive:
  ${fee} | ${currency(fees[fee].amount) if hasattr(fees[fee],'amount') else '' } | ${action_button_html(url_action("fees['"+ fee + "'].waive"))}
  % endif
  % endfor

  ${action_button_html(url_action("fees['E-filing'].waive"))}
  
  On the next screens, you will provide your name, address, and signature.
  
  Optionally, you can email this form to an advocate who may help you file it
  with the court.
continue button field: fees_interstitial
---
continue button field: qualify_interstitial
question: |
  It looks like you qualify for a fee waiver
subquestion: |
  Based on your answers, you qualify.
  
  % if public_assistance_kinds.any_true():
  You receive these public benefits: ${public_assistance_kinds.true_values()}
  % elif household_income_qualifies:
  Your ${income_period(hh_income.period)} income of ${currency(hh_income.amount(period_to_use=hh_income.period))} is less than 125% of the poverty level, which is
  ${currency(household_income_limit/hh_income.period)} for a household of ${nice_number(household_size)}.
  % elif not can_afford:
  You told us that you can't afford to pay the fees and pay for the necessities
  of life. A judge will take a closer look at your income and expenses and decide
  if you qualify for sure.
  
  You also must complete a [supplemental affidavit](https://www.mass.gov/doc/supplement-to-the-affidavit-of-indigency/download). Please download, fill out, and print this on your own. It's not part of this interview yet.
  % endif
  
  On the next screen, we'll ask you about the specific fees you want waived.
---
question: |
  Your personal information
subquestion: |
  Enter your name and address below.
fields:
  - Your full name: client.name.first
    default: ${client}
  - Street address: client.address.address
    address autocomplete: True
  - Unit/apartment: client.address.unit
    required: False
  - City: client.address.city
  - State: client.address.state
    code: states_list()
  - Zip: client.address.zip    
  - Email: client.email
    datatype: email
    required: False
---
code: |
  client.address.geolocate()
  tried_geolocating = True
---
code: |
  local_housing_court = macourts.matching_housing_court(client.address)
---
question: |
  Your court and case number
subquestion: |
  We have tried to guess  the name of your court based on your address.
  Look closely to make sure this is the right court name.
fields:
  - What court is your case being heard in?: court
    datatype: object
    default: local_housing_court
    choices: macourts
  - Docket number or case number (if known): docket_number
    required: False
---
code: |
  if url_args.get('recipient_email'):
    recipient_email = url_args.get('recipient_email')
    have_email_in_url_args = True
  elif url_args.get('advocate_email'):
    recipient_email = url_args.get('advocate_email')
    have_email_in_url_args = True
  elif url_args.get('case_email'):
    recipient_email = url_args.get('case_email')
    have_email_in_url_args = True
  else:
    have_email_in_url_args = False
    recipient_email = ""
---
continue button field: final_review
question: |
  Summary
subquestion: |
  Here's the document you just filled out:
  ${affidavitofindigency}
fields:
  - Email a copy of this signed affidavit: send_email_copy
    datatype: yesnowide
    default: ${have_email_in_url_args}
  - Email address: email_recipient
    datatype: email
    show if: send_email_copy
    default: ${recipient_email}
---
event: ending
question: |
  All set.
subquestion: |
  % if send_email:
  Okay, we sent your document to ${email_recipient}
  % endif
  
  You can still download a copy of your document [here](${affidavitofindigency.url_for()}).
  
  This interview **does not file your form for you**. You can download and
  [e-file it](http://www.efilema.com/) or you may have an attorney working with
  you who plans to do the e-filing on your behalf.  
  
  If you need to make any changes, click an edit button below:
  
  * [Edit "standard" waiver requests](${url_action("fees['E-filing'].waive")})
  * [Edit "extra fees and costs"](${url_action("fees['transcript'].amount")})
  * [Edit name](${url_action("client.name.first")})
  * [Edit public benefits](${url_action("public_assistance_kinds")})
  * [Edit income](${url_action("hh_income.value")})
  * [Edit inability to pay](${url_action("can_afford")})
---
code: |
  need_income = not public_assistance_kinds.any_true()
---
code: |
  if not (hh_income.period in [52,26,12,1]):
    monthly_income = hh_income.amount(period_to_use=12)
    hh_income.period = 12
    hh_income.value = monthly_income
  weekly = 'Yes' if need_income and hh_income.period == 52 else 'No'
  biweekly = 'Yes' if need_income and hh_income.period == 26 else 'No'
  monthly = 'Yes' if need_income and hh_income.period == 12 else 'No'
  annually = 'Yes' if need_income and hh_income.period == 1 else 'No'     
---
code: |
  filing_fees_amount = fees['E-filing'].amount + fees['Filing fee'].amount if defined("fees['Filing fee'].amount") and fees['Filing fee'].waive else fees['E-filing'].amount
---
reconsider: True
attachment:
  - name: affidavitofindigency
    variable name: affidavitofindigency
    filename: affidavitofindigency
    pdf template file: affidavitofindigency.pdf
    fields:
      - "court": ${court}
      - "docket_number": ${showifdef('docket_number')}
      - "client": ${client}
      - "client_address": ${client.address.on_one_line()}
      - "gets_public_benefits": ${yesno(public_assistance_kinds.any_true())}
      - "Medicaid": ${yesno(public_assistance_kinds['Medicaid'])}
      - "TAFDC": ${yesno(public_assistance_kinds['TAFDC'])}
      - "SSI": ${yesno(public_assistance_kinds['SSI'])}
      - "EAEDC": ${yesno(public_assistance_kinds['EAEDC'])}
      - "VA": ${yesno(public_assistance_kinds['VA Benefits'])}
      - "below_poverty_level": ${yesno(household_income_qualifies) if need_income else "No"}
      - "weekly": ${weekly}
      - "biweekly": ${biweekly}
      - "monthly": ${monthly}
      - "annually": ${annually}
      - "income_amount": ${hh_income.amount(period_to_use=hh_income.period)}
      - "household_additional_size": ${household_additional_size if need_income else ''}
      - "household_size": ${household_size if need_income else ''}
      - "other_income": ${'Included above' if need_income else ''}
      - "unable_to_pay": ${noyes(can_afford) if (need_income and not household_income_qualifies) else 'No'}
      - "fee_filing": "Yes"
      - "fee_filing_amount": ${currency(filing_fees_amount)}
      - "fee_appeal": ${yesno(fees['Appeal cost'].waive)}
      - "fee_appeal_amount": ${currency(fees['Appeal cost'].amount) if fees['Appeal cost'].waive and defined("fees['Appeal cost'].amount") else ''}
      - "fee_service": ${yesno(fees['Service'].waive)}
      - "fee_service_amount": ${currency(fees['Service'].amount) if fees['Service'].waive and defined("fees['Service'].amount") else ""}
      - "fee_other": ${yesno(fees['Other'].waive)}
      - "fee_other_amount": ${currency(fees['Other'].amount) if fees['Other'].waive and defined("fees['Other'].waive") else ""}      
      - "fee_other_description": ${showifdef("fees['Other'].description")}
      # - "fee_other_description_more": ''
      # - "fee_substitution": No
      # - "fee_substitution_description": something
      # - "fee_substitution_description_more": something
      - "fee_expert": ${yesno(fees['Costs of an expert witness'])}
      - "fee_expert_amount": ${currency(fees['Costs of an expert witness'].amount) if (fees['Costs of an expert witness'] and defined("fees['Costs of an expert witness'].amount")) else ''}
      - "fee_expert_description": ${showifdef("fees['Costs of an expert witness'].description")}
      - "fee_deposition": ${yesno(fees['Depositions'].waive)}
      - "fee_deposition_amount": ${currency(fees['Depositions'].amount) if (fees['Depositions'].waive and defined("fees['Depositions'].amount")) else ''}
      - "fee_deposition_description": ${showifdef("fees['Costs of an expert witness'].description")}
      - "fee_recording": ${yesno(fees['recordings'].waive)}
      - "fee_appeal_bond": ${yesno(fees['Appeal bond'].waive)}
      - "fee_transcript": ${yesno(fees['transcript'].waive)}
      - "fee_transcript_amount": ${currency(fees['transcript'].amount) if (fees['transcript'].waive and defined("fees['transcript'].amount")) else ''}
      - "cost_other": ${yesno(fees['Other cost'].waive)}
      - "cost_other_description": ${showifdef("fees['Other cost'].description")}
      - "cost_other_amount": ${currency(fees['Other cost'].amount) if defined("fees['Other cost'].amount") and fees['Other cost'].waive else ''}
      # - "cost_other_description_more": fees['Other cost'].waive
      # - "substitution": No
      # - "substitution_description": something
      - "client_signature": |
          ${ client.signature }
      - "date_signed": ${format_date(today())}
---
code: |
  if url_args.get('advocate_email'):
    email_recipient_list = [url_args.get('advocate_email'), recipient_email]
  else:
    email_recipient_list = email_recipient
---
code: |
  if task_not_yet_performed("send email"):
    if defined('client.email'):
      send_email(to=email_recipient, cc=client, template=email_affidavit, attachments=affidavitofindigency, task="send email")
    else:
      send_email(to=email_recipient_list, template=email_affidavit, attachments=affidavitofindigency, task="send email")
  sent_email = True
---
template: email_affidavit
subject: |
  Signed Affidavit of Indigency for ${client}
content: |
  ${client} completed and signed the attached affidavit of indigency
  for ${court} on ${today()}.
  
  You can review their answers here ${interview_url()}